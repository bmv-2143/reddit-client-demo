plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // Hilt [1]
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'

    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.finalattestationreddit'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.finalattestationreddit"
        minSdk 23

        targetSdk 33

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "REDDIT_CLIENT_ID", "\"${getRedditClientId()}\""
        buildConfigField("String", "API_URL", "\"https://oauth.reddit.com/\"")
        buildConfigField("Boolean", "HTTP_LOGGING_ENABLED", "true")
        buildConfigField("String", "REDDIT_BASE_URL", "\"https://www.reddit.com\"")

        testInstrumentationRunner = "com.example.finalattestationreddit.CustomTestRunner" // TODO: do I need this and this class?
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        viewBinding true
    }

    splits {

        // Configures multiple APKs based on screen density.
        density {
            // Enables density-based APK splitting.
            enable true

            // Specifies a list of screen densities to generate APKs for.
            include "ldpi", "mdpi", "hdpi", "xhdpi", "xxhdpi", "xxxhdpi"
        }

        // Configures multiple APKs based on ABI.
        abi {
            // Enables ABI-based APK splitting.
            enable true

            // Specifies a list of ABIs to generate APKs for.
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

            // Specifies that all ABIs should be included in the universal APK.
            universalApk true
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }

        // Fix MockK / UI tests compatibility issue:
        // see: https://stackoverflow.com/questions/73146494/not-able-to-use-mockk-in-android-espresso-ui-testing
        packagingOptions {
            jniLibs {
                useLegacyPackaging = true
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/LICENSE.md'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Activity, Fragment KTX
    implementation 'androidx.activity:activity-ktx:1.7.2'

    // View Pager 2
    implementation 'androidx.viewpager2:viewpager2:1.1.0-beta02'

    // OkHttp Logging Interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    // Retrofit & Moshi
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.14.0'

    // Hilt [2]
    implementation "com.google.dagger:hilt-android:2.45"
    kapt "com.google.dagger:hilt-compiler:2.45"

    // Paging Library
    implementation 'androidx.paging:paging-common-ktx:3.1.1'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt  'com.github.bumptech.glide:compiler:4.14.2'

    // Room
    def room_version = "2.5.2"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Chrome Custom Tabs
    implementation 'androidx.browser:browser:1.5.0'

    // Android Support Annotations library
    implementation 'com.android.support:support-annotations:28.0.0'

    // Tests
    // Junit 4
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'


    // JUnit 5
    androidTestImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // To continue to run your JUnit4 tests alongside Junit5:
    testImplementation "org.junit.vintage:junit-vintage-engine:5.8.2"

    // Hamcrest
    testImplementation "org.hamcrest:hamcrest-all:1.3"

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.4.6'

    // MockK
    testImplementation "io.mockk:mockk:1.12.2"
    androidTestImplementation "io.mockk:mockk-android:1.12.2"

    // Kotlin Coroutines Tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0"

    // AndroidX test library for creating fragments in tests and changing their state
    debugImplementation "androidx.fragment:fragment-testing:1.6.1"

    // Core AndroidX test library
    implementation "androidx.test:core:1.5.0"


    // Hilt instrumented tests
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.44.2'

    // Hilt tests with Kotlin
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.45'


}

def getRedditClientId() {
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
    return localProperties.getProperty('REDDIT_CLIENT_ID')
}